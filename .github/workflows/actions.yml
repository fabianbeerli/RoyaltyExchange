name: Scrape Data, build and upload Model

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.1' # install the python version needed
          cache: 'pip'
          
      - name: install python packages
        run: |
          pip install -r requirements.txt

      #- name: Prepare Chrome and ChromeDriver
      #  uses: browser-actions/setup-chrome@latest

      #- name: install chromedriver
      #  run: |
      #    wget https://chromedriver.storage.googleapis.com/99.0.4844.51/chromedriver_linux64.zip
      #    unzip chromedriver_linux64.zip
      #    chmod +x chromedriver
      #    sudo mv chromedriver /usr/local/bin/
      #    chmod +x /usr/local/bin/chromedriver # Ensure chromedriver is executable

      #- name: install Chrome
      #  run: |
      #    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      #    sudo dpkg -i google-chrome-stable_current_amd64.deb
      #    sudo apt-get install -f

      - name: scrape hikr data 
        working-directory: ./spider
        run: |
          scrapy crawl gpx -s CLOSESPIDER_PAGECOUNT=50 -o file.jl

      - name: upload data to mongodb
        working-directory: spider/downloads
        run: python ./mongo_import.py -c tracks -i ../file.jl -u "${{secrets.MONGODB_URI}}"

      - name: build model
        working-directory: model
        run: python ./model.py -u "${{secrets.MONGODB_URI}}"

      - name: upload model
        working-directory: model
        run: python ./save.py -c "${{secrets.AZURE_STORAGE_CONNECTION_STRING}}"

      - name: build Docker image
        run: docker build -t fabianbeerli/royaltyexchange:latest .

      - name: Push Docker image to registry
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          docker push fabianbeerli/royaltyexchange:latest

      - name: deploy to Azure Container Instances
        run: az container create --resource-group mdm-royaltyexchange --name mdm-royaltyexchange --image fabianbeerli/royaltyexchange:latest --dns-name-label mdm-royaltyexchange --ports 80 --environment-variables AZURE_STORAGE_CONNECTION_STRING='${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}'